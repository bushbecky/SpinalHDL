library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

library work;
use work.pkg_scala2hdl.all;
use work.all;
use work.pkg_enum.all;

-- #spinalBegin userLibrary
-- #spinalEnd userLibrary


entity BundleTester_tb is
end BundleTester_tb;

architecture arch of BundleTester_tb is
  signal io_conds_0 : std_logic;
  signal io_conds_1 : std_logic;
  signal io_conds_2 : std_logic;
  signal io_conds_3 : std_logic;
  signal io_conds_4 : std_logic;
  signal io_conds_5 : std_logic;
  signal io_conds_6 : std_logic;
  signal io_conds_7 : std_logic;
  signal io_inAA_0_a : std_logic;
  signal io_inAA_0_c : std_logic;
  signal io_inAA_0_b : std_logic;
  signal io_inAA_0_d : std_logic;
  signal io_inAA_1_a : std_logic;
  signal io_inAA_1_c : std_logic;
  signal io_inAA_1_b : std_logic;
  signal io_inAA_1_d : std_logic;
  signal io_inAA_2_a : std_logic;
  signal io_inAA_2_c : std_logic;
  signal io_inAA_2_b : std_logic;
  signal io_inAA_2_d : std_logic;
  signal io_inA_0_a : std_logic;
  signal io_inA_0_c : std_logic;
  signal io_outAA_a : std_logic;
  signal io_outAA_c : std_logic;
  signal io_outAA_b : std_logic;
  signal io_outAA_d : std_logic;
  -- #spinalBegin userDeclarations
  -- #spinalEnd userDeclarations
begin
  -- #spinalBegin userLogics
  -- #spinalEnd userLogics
  uut : entity work.BundleTester
    port map (
      io_conds_0 =>  io_conds_0,
      io_conds_1 =>  io_conds_1,
      io_conds_2 =>  io_conds_2,
      io_conds_3 =>  io_conds_3,
      io_conds_4 =>  io_conds_4,
      io_conds_5 =>  io_conds_5,
      io_conds_6 =>  io_conds_6,
      io_conds_7 =>  io_conds_7,
      io_inAA_0_a =>  io_inAA_0_a,
      io_inAA_0_c =>  io_inAA_0_c,
      io_inAA_0_b =>  io_inAA_0_b,
      io_inAA_0_d =>  io_inAA_0_d,
      io_inAA_1_a =>  io_inAA_1_a,
      io_inAA_1_c =>  io_inAA_1_c,
      io_inAA_1_b =>  io_inAA_1_b,
      io_inAA_1_d =>  io_inAA_1_d,
      io_inAA_2_a =>  io_inAA_2_a,
      io_inAA_2_c =>  io_inAA_2_c,
      io_inAA_2_b =>  io_inAA_2_b,
      io_inAA_2_d =>  io_inAA_2_d,
      io_inA_0_a =>  io_inA_0_a,
      io_inA_0_c =>  io_inA_0_c,
      io_outAA_a =>  io_outAA_a,
      io_outAA_c =>  io_outAA_c,
      io_outAA_b =>  io_outAA_b,
      io_outAA_d =>  io_outAA_d 
    );
end arch;
