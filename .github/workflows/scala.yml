name: Scala CI

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  compile:
    runs-on: ubuntu-latest
    timeout-minutes: 90

    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/sbt
    - run: sbt Test/compile
    - uses: actions/cache/save@v3
      with:
        path: |
          **/target
        key: ${{ runner.os }}-compiled-${{ github.sha }}

  build-tools:
    # This action is actually optional
    # Avoids building tools several times
    runs-on: ubuntu-latest
    timeout-minutes: 90

    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/tools

  test:
    needs: [compile, build-tools]
    runs-on: ubuntu-latest
    timeout-minutes: 90

    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/get-compiled
    - uses: ./.github/actions/tools
    - run: sbt testWithoutFormal

  formal:
    needs: [compile, build-tools]
    runs-on: ubuntu-latest
    timeout-minutes: 90

    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/get-compiled
    - uses: ./.github/actions/tools
    - run: sbt testFormal

  scaladoc:
    needs: compile
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/get-compiled
    - run: sbt unidoc

  fmt-lint:
    # Don't use compiled result here, must start from a clean repository
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: github.ref != 'refs/heads/dev'

    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/sbt
    - name: Fetch dev to be able to check only modified files
      run: |
        git fetch --depth=1 origin dev
        git branch dev origin/dev
    - name: Setup annotations
      run: echo "::add-matcher::.github/matcher.json"
    - name: Check formatting and pass
      run: bash .github/checkfmt.bash
